# # Default values for mychart.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

release:
    name: mongo-dev
    replicaCount: 1
    serviceName: "mongo-dev"
    

appLabel: mongo-dev

# image:
  # repository: nginx
  # pullPolicy: IfNotPresent
  # # Overrides the image tag whose default is the chart appVersion.
  # tag: ""
containers:
    name: mongo
   # image: registry.gitlab.com/tchallenge-zanatar/tchallenge-mongo/mongo-dev
    image: mongo:latest
    port: 27017
    secret: gitlab  
promtail:
    name: prom-sidecar
    image: grafana/promtail
    
exporter:
    name: mongodb-exporter
    image: ssheehy/mongodb-exporter:latest
    port: 9121
    resources:
      cpu: 100m
      memory: 100Mi
service:
  mongo:
    protocol: TCP
    servicePort: 27017
    targetPort: 27017
  prom:
    protocol: TCP
    servicePort: 9216
    targetPort: 9216 

livenessProbe:
  failureThreshold: 5
  initialDelaySeconds: 40
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 30

readinessProbe:
  failureThreshold: 5
  initialDelaySeconds: 40
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 30    

volumes:
  data:
    name: data
  logstash:
    name: logs
    mountPath: /var/log/mongodb
  config:
    name: promtail
    configMap: promtail-mongo-config
    defaultMode: 420
    mountPath: /etc/promtail

pvc: 
  name: mongo-storage
  type: "glusterfs-storage"
  accessModes: ReadWriteOnce
  capacity: 1Gi
  mountPath: /db/data
  
configmap: 
  name: init 
  serviceName: mongo-init
  defaultMode: 420
  mountPath: /docker-entrypoint-initdb.d

prometeus_scrape:
#  prometheus.io/scrape_dev: 'true'
  prometheus.io/path: /metrics
  prometheus.io/port: '9216'

volumeClaimTemplates:
  create: false
# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
  # # Specifies whether a service account should be created
  # create: true
  # # Annotations to add to the service account
  # annotations: {}
  # # The name of the service account to use.
  # # If not set and create is true, a name is generated using the fullname template
  # name: ""

# podAnnotations: {}

# podSecurityContext: {}
  # # fsGroup: 2000

# securityContext: {}
  # # capabilities:
  # #   drop:
  # #   - ALL
  # # readOnlyRootFilesystem: true
  # # runAsNonRoot: true
  # # runAsUser: 1000

# service:
  # type: ClusterIP
  # port: 80

# ingress:
  # enabled: false
  # annotations: {}
    # # kubernetes.io/ingress.class: nginx
    # # kubernetes.io/tls-acme: "true"
  # hosts:
    # - host: chart-example.local
      # paths: []
  # tls: []
  # #  - secretName: chart-example-tls
  # #    hosts:
  # #      - chart-example.local

# resources: {}
  # # We usually recommend not to specify default resources and to leave this as a conscious
  # # choice for the user. This also increases chances charts run on environments with little
  # # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # # limits:
  # #   cpu: 100m
  # #   memory: 128Mi
  # # requests:
  # #   cpu: 100m
  # #   memory: 128Mi

# autoscaling:
  # enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}

