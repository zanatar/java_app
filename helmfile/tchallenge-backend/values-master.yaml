# # Default values for mychart.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

release:
    name: backend-master
    replicaCount: 1

appLabel: backend-master

# image:
  # repository: nginx
  # pullPolicy: IfNotPresent
  # # Overrides the image tag whose default is the chart appVersion.
  # tag: ""
containers:
    name: backend
    image: registry.gitlab.com/tchallenge-zanatar/tchallenge-backend/backend-master
    port: 4567
    exporterPort: 8080
    secret: gitlab
promtail:
    name: prom-sidecar
    image: grafana/promtail
    mountPath: '/backend/logs'
# This chart was designed to be installed via gitlab or helm. 
# During its installation, the Dockerfile version is automatically added to the values.yaml file.
# For manual installation - uncomment the line with the Dockerfile version and set the actual value.
# imagetag: %DOCKERFILE_LABEL%
volumes:
  logstash:
    name: logs
    mountPath: '/backend/logs'
    pvc: logstash-master
  jmx:
    name: jmx-config
    configMap: jmx-exporter-config
    defaultMode: 420
    mountPath: '/backend/config'
  promtail:
    name: promtail-config
    configMap: promtail-backend-config.yaml
    defaultMode: 420
    mountPath: /etc/promtail
livenessProbe:
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 30

readinessProbe:
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 30  


values:
    TCHALLENGE_MONGODB_HOST: mongo-master-deployment
    TCHALLENGE_MONGODB_PORT: '27017'
    TCHALLENGE_MONGODB_PASSWORD: 'bzZbgg71'
    TCHALLENGE_MONGODB_USERNAME: 'user'
    TCHALLENGE_MONGODB_DATABASE: 'tchallenge'
service:
  backend:
    protocol: TCP
    servicePort: 4567
    targetPort: 4567
  prom:
    protocol: TCP
    servicePort: 8080
    targetPort: 8080 
route:
    host: master-backend-anazarov.openshift.devops.t-systems.ru
    path: '/' 
    port: backend   
# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
  # # Specifies whether a service account should be created
  # create: true
  # # Annotations to add to the service account
  # annotations: {}
  # # The name of the service account to use.
  # # If not set and create is true, a name is generated using the fullname template
  # name: ""

# podAnnotations: {}

# podSecurityContext: {}
  # # fsGroup: 2000

# securityContext: {}
  # # capabilities:
  # #   drop:
  # #   - ALL
  # # readOnlyRootFilesystem: true
  # # runAsNonRoot: true
  # # runAsUser: 1000

# service:
  # type: ClusterIP
  # port: 80

# ingress:
  # enabled: false
  # annotations: {}
    # # kubernetes.io/ingress.class: nginx
    # # kubernetes.io/tls-acme: "true"
  # hosts:
    # - host: chart-example.local
      # paths: []
  # tls: []
  # #  - secretName: chart-example-tls
  # #    hosts:
  # #      - chart-example.local

# resources: {}
  # # We usually recommend not to specify default resources and to leave this as a conscious
  # # choice for the user. This also increases chances charts run on environments with little
  # # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # # limits:
  # #   cpu: 100m
  # #   memory: 128Mi
  # # requests:
  # #   cpu: 100m
  # #   memory: 128Mi

# autoscaling:
  # enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}

